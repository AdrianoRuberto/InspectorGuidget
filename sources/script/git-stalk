#! /bin/bash

if [ "$#" -ne 5 ]; then
	echo "The following arguments must be provided:"
	echo -e "\t1. The name of the file to analyse;"
	echo -e "\t2. The log file;"
	echo -e "\t3. The start line of the code block to analyse;"
	echo -e "\t4. The end line of the code block to analyse."
	echo -e "\t5. The number of commands of the listener." # specific to our use. To remove.
	exit
fi

declare -r GIT_REPO_PATH=`git rev-parse --show-toplevel`
declare -r REPO_NAME=`basename $GIT_REPO_PATH`
declare -i startLine=$3
declare -i endLine=$4
declare -i end=0
declare -r LOG_FILE=$2
declare -r FILE_NAME=$1
declare -r NB_CMDS=$5
declare -r LINES_OF_CTX=0
declare -r DEBUG=0
declare -r DEBUG_FILE="DEBUG.log"

blame=`git --no-pager blame -l -L $startLine,$endLine $FILE_NAME | sed -e "s/^\^*\([a-zA-Z0-9]*\) .*/\1/g" | sort | uniq | tr '\n' ';'`

if [ -z "$blame" ]; then exit; fi

printf $REPO_NAME";"$FILE_NAME";"$startLine";"$endLine";"$NB_CMDS";" >> $LOG_FILE

if [ "$DEBUG" -eq "1" ] ; then 
	echo "### DEBUGGING "$REPO_NAME";"$FILE_NAME";"$startLine";"$endLine >> $DEBUG_FILE
fi

while read rev ; do # Reading all the revisions that concern the file
		if [ "$DEBUG" -eq "1" ] ; then 
			echo -e "\tREV: "$rev >> $DEBUG_FILE
			echo -e "\t\t### CODE BLOCK POSITION ($startLine-$endLine): " >> $DEBUG_FILE
			echo "git --no-pager blame -s --abbrev=0 -L $startLine,$endLine $FILE_NAME $rev" >> $DEBUG_FILE
			currCodeBlock=`git --no-pager blame -s --abbrev=0 -L $startLine,$endLine $FILE_NAME $rev | sed 's/^.*\.java //g'`
			echo -e "$currCodeBlock" >> $DEBUG_FILE
		fi

		commitConcerned=0 # Does the commit affect the code block of interest?
		nbChunkHeaders=0 # The number of diffs of the commit

		while read chunkHeader ; do # Reading all the diffs of the commit
			nbChunkHeaders=$((nbChunkHeaders+1))
			if [ "$DEBUG" -eq "1" ] ; then 
				echo -e "\t\tStartLine:"$startLine", endLine:"$endLine >> $DEBUG_FILE
				echo -e "\t\t"$chunkHeader >> $DEBUG_FILE
			fi

			if [[ "$chunkHeader" =~ ^@@@.* ]] ; then # When the diff is a merge ('@@@ ... @@@')
				startCurrentFile=`echo $chunkHeader | sed -e "s/^@@@ -[0-9]*\(,[0-9]*\)\? -[0-9]*\(,[0-9]*\)\? +\([0-9]*\).*@@@.*$/\3/g"`
				startCurrentFile=$((startCurrentFile+LINES_OF_CTX))
				endCurrentFile=`echo $chunkHeader | sed -e "s/^@@@ -[0-9]*\(,[0-9]*\)\? -[0-9]*\(,[0-9]*\)\? +[0-9]*,\([0-9]*\) @@@.*$/\3/g"`
				if [[ "$endCurrentFile" =~ ^@.* ]]; then endCurrentFile=1 ; fi

				startPrevFile=`echo $chunkHeader | sed -e "s/^@@@ -\([0-9]*\).*@@@.*$/\1/g"`
				startPrevFile=$((startPrevFile+LINES_OF_CTX))
				endPrevFile=`echo $chunkHeader | sed -e "s/^@@@ -[0-9]*,\([0-9]*\) +.*@@@.*$/\1/g"`
				if [[ "$endPrevFile" =~ ^@.* ]]; then endPrevFile=1 ; fi

				endPrevFile2=`echo $chunkHeader | sed -e "s/^@@@ -[0-9]*\(,[0-9]*\)\? -[0-9]*,\([0-9]*\) +.*@@@.*$/\2/g"`
				if [[ "$endPrevFile2" =~ ^@.* ]]; then endPrevFile2=1 ; fi

				nbLines=$((endCurrentFile*2-endPrevFile-endPrevFile2))
			else # When the diff is not a merge ('@@ ... @@')
				startCurrentFile=`echo $chunkHeader | sed -e "s/^@@ -[0-9]*\(,[0-9]*\)\? +\([0-9]*\).*@@.*$/\2/g"`
				startCurrentFile=$((startCurrentFile+LINES_OF_CTX))
				endCurrentFile=`echo $chunkHeader | sed -e "s/^@@ -[0-9]*\(,[0-9]*\)\? +[0-9]*,\([0-9]*\) @@.*$/\2/g"`
				if [[ "$endCurrentFile" =~ ^@.* ]]; then endCurrentFile=1 ; fi

				startPrevFile=`echo $chunkHeader | sed -e "s/^@@ -\([0-9]*\).*@@.*$/\1/g"`
				startPrevFile=$((startPrevFile+LINES_OF_CTX))
				endPrevFile=`echo $chunkHeader | sed -e "s/^@@ -[0-9]*,\([0-9]*\) +.*@@.*$/\1/g"`
				if [[ "$endPrevFile" =~ ^@.* ]]; then endPrevFile=1 ; fi

				nbLines=$((endCurrentFile-endPrevFile))
			fi

			endPrevFilePlusLines=$((endCurrentFile+startPrevFile))
			endCurrentFile=$((startCurrentFile+endCurrentFile-2*LINES_OF_CTX-1))
			endPrevFile=$((startPrevFile+endPrevFile-2*LINES_OF_CTX-1))

			if [ "$DEBUG" -eq "1" ] ; then 
				echo $chunkHeader" startCurr:"$startCurrentFile" endCurr:"$endCurrentFile" startPrev:"$startPrevFile" endPrev:"$endPrevFile" addedLines:"$nbLines >> $DEBUG_FILE
			fi

			if [ $endPrevFilePlusLines -lt $startLine ]; then # When the diff affects lines before the code block of interest
				if [ "$DEBUG" -eq "1" ] ; then echo -e "\t\t\tMoving up the code block of "$nbLines" lines." >> $DEBUG_FILE; fi
				startLine=$((startLine-nbLines))
				endLine=$((endLine-nbLines))
			else
				if [ $endPrevFilePlusLines -le $endLine ] ; then # When the diff affects lines before the end of code block of interest
					commitConcerned=1
					if [ $startPrevFile -ge $startLine ] ; then # When the diff affects lines in the code block of interest
						if [ "$DEBUG" -eq "1" ] ; then echo -e "\t\t\tReducing the code block of "$nbLines" lines (moving the end)." >> $DEBUG_FILE; fi
						endLine=$((endLine-nbLines))
					else 
						# The following 'if' statement may be removed. 
						# This is a shortcut when the diff seems to create the file or when no line is added (this last may not be correct in some rare cases, to check).
						if [[ "$startPrevFile" -lt 1 && "$endPrevFile" -lt 1 ]] || [[ "$startPrevFile" -eq "$startCurrentFile" && "$endPrevFile" -eq "$endCurrentFile" ]] ; then end=1;
						else 
							while true; do # This case is not deterministic since the diff affects the beginning of the code block of interest and some other lines of code.
							# gitk permits to look at the diff and answer the following questions.
							gitk --unified=$LINES_OF_CTX $rev -1 $FILE_NAME &
							read -p "Look at the header: $chunkHeader. If the code block is in the code above (if not, type N), is it the commit that introduced the code block (type F)? Or how many lines added/removed (the total, negative value when removed) BEFORE the beginning of the code block?" res1 </dev/tty
								case $res1 in
									F ) end=1; break;;
									N ) end=1; break;;
									[[:digit:]]*|-[[:digit:]]* ) startLine=$((startLine-nbLines)) ; break;;
									* ) echo "Please answer N, F, or an integer value";;
								esac
							done

							if [ $end -eq "0" ]; then
								while true; do
								read -p "And how many lines added/removed (negative value when removed) IN the code block?" res2 </dev/tty
									case $res2 in
										[[:digit:]]*|-[[:digit:]]* ) endLine=$((endLine-(res1+res2))) ; break;;
										* ) echo "Please an integer value";;
									esac
								done
							fi
						fi
					fi
				else
					if [ $startCurrentFile -le $endLine ] ; then # When the diff affects the end of the code block of interest plus some other lines of code.
						if [[ "$startPrevFile" -lt 1 && "$endPrevFile" -lt 1 ]] || [[ "$startPrevFile" -eq "$startCurrentFile" && "$endPrevFile" -eq "$endCurrentFile" ]] ; then end=1;
						else 
							while true; do
							gitk --unified=$LINES_OF_CTX $rev -1 $FILE_NAME &
							read -p "Look at the header: $chunkHeader. If the code block is in the code above (if not, type N), is it the commit that introduced the code block (type F)? Or how many lines added/removed (the total, negative value when removed) IN the code block (in fact before the end of the code block)? " res </dev/tty
								case $res in
									N ) end=1; break;;
									F ) end=1; break;;
									[[:digit:]]*|-[[:digit:]]* ) endLine=$((endLine-res)) ; break;;
									* ) echo "Please answer N, F, or an integer value";;
								esac
							done
						fi
					fi
				fi
			fi
			if [ "$DEBUG" -eq "1" ] ; then echo -e "\t END REV: "$rev startLine=$startLine, endLine=$endLine", end="$end >> $DEBUG_FILE ; fi
			if [ $end -eq "1" ]; then break; fi
		done < <(git --no-pager log --unified=$LINES_OF_CTX -p $rev -1 $FILE_NAME | grep -o '^@@.*')

	if [ $nbChunkHeaders -eq "0" ]; then end=1; fi
	if [ $commitConcerned -eq 1 ] ; then blame+=";"$rev ; fi # Adding the commit to the list of commits that affect the code block of interest.
	if [ $end -eq "1" ]; then break; fi
done < <(git rev-list HEAD -- $FILE_NAME)

nbCommits=`echo "$blame" | tr ';' '\n' | sort | uniq | grep -v '^$' | wc -l`
blame=`echo "$blame" | tr ';' '\n' | sort | uniq | tr '\n' ';'`
printf $nbCommits"$blame""\n" >> $LOG_FILE

if [ "$DEBUG" -eq "1" ] ; then echo "### END DEBUGGING "$REPO_NAME";"$FILE_NAME >> $DEBUG_FILE; fi

